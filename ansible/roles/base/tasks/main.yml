- name: "include os variables"
  include_vars: "{{item}}"
  with_first_found:
    - "vars/{{ansible_os_family|lower}}.yml"
  tags: always

- name: "system dirs created"
  file:
    path: "{{item}}"
    recurse: true
    state: directory
  become: true
  with_items:
    - "{{system_dirs}}"

- name: "user dirs created"
  file:
    path: "{{item}}"
    state: directory
    mode: 0750
  with_items:
    - "{{user_dirs}}"

- name: "base packages present"
  yum:
    name: "{{item}}"
    state: present
  become: true
  with_items:
    - "{{base_packages}}"

- name: "hostname present in /etc/hosts"
  lineinfile:
    dest: /etc/hosts
    regexp: "^{{ansible_default_ipv4.address}}"
    line: "{{ansible_default_ipv4.address}} {{ansible_fqdn}} {{ansible_hostname}}"
    state: present
    backup: yes
  become: true

- name: "pam limits set"
  pam_limits:
    domain: "{{item.domain}}"
    limit_type: "{{item.type}}"
    limit_item: "{{item.limit}}"
    value: "{{item.value}}"
  become: true
  with_items:
    - "{{pam_limits}}"
  
- name: "sysctl values set"
  sysctl:
    name: "{{item.name}}"
    value: "{{item.value}}"
    sysctl_set: yes
    reload: yes
  become: true
  with_items:
    - "{{sysctl_entries}}"

- name: "cron entries updated"
  copy:
    src: "{{item}}"
    dest: "/etc/cron.d/"
  with_fileglob: "{{role_path}}/files/etc/cron.d/*"
  become: true

- name: "unneeded services disabled and stopped"
  systemd:
    name: "{{item}}"
    enabled: no
    state: stopped
  become: true
  ignore_errors: true
  with_items:
    - "{{disabled_services}}"

- name: "base services enabled and started"
  systemd:
    name: "{{item}}"
    enabled: yes
    masked: no
    state: started
  become: true
  with_items:
    - "{{base_services}}"


