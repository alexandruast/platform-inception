- name: "include variables"
  include_vars: "{{item}}"
  with_first_found:
    - "vars/{{ansible_os_family|lower}}.yml"
  tags: always

- name: "required packages present"
  package:
    name: "{{item}}"
    state: present
  become: true
  with_items:
    - "{{workstation_packages}}"

- name: "system pips installed and upgraded"
  pip:
    name: "{{item}}"
    extra_args: --upgrade
  become: true
  with_items:
    - "{{workstation_system_pips}}"
  tags: pip

- name: "user pips installed and upgraded"
  pip:
    name: "{{item}}"
    extra_args: --upgrade --user
  with_items:
    - "{{workstation_user_pips}}"
  tags: pip

- name: "git repos are in place"
  git:
    repo: "{{item.download_url}}"
    dest: "{{item.dest}}"
  with_items:
    - "{{workstation_git}}"
  tags: git

- name: "shell profile scripts are in place"
  copy:
    src: "{{item}}"
    dest: "{{ansible_env.HOME}}/profile.d/"
  with_fileglob: "{{role_path}}/files/profile.d/*"
  tags: env

- name: ".zshrc exists and is updated"
  copy:
    src: "{{zshrc_conf}}"
    dest: "{{ansible_env.HOME}}/{{zshrc_conf}}"
  tags: env

- name: "user {{ansible_user_id}} uses zsh shell"
  user:
    name: "{{ansible_user_id}}"
    shell: "{{workstation_shell}}"
  become: true
  tags: env

- name: "custom fact for workstation setup completed"
  copy:
    src: facts/w_setup_completed.fact
    dest: /etc/ansible/facts.d/w_setup_completed.fact
  become: true

- name: "reload ansible_local"
  setup:
    filter: ansible_local
  tags: always
