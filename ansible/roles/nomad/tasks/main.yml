- name: "service archive downloaded"
  get_url:
    url:  "https://releases.hashicorp.com/{{service_name}}/{{service_version}}/{{service_name}}_{{service_version}}_linux_amd64.zip"
    dest: "{{artifacts_dir}}/{{service_name}}_{{service_version}}_linux_amd64.zip"
    force: no
  register: service_archive
  become: true

- name: "service binary check"
  stat:
    path: "/usr/local/bin/{{service_name}}"
  register: service_binary_check
  changed_when: false

- name: "service binaries installed"
  unarchive:
    src:  "{{artifacts_dir}}/{{service_name}}_{{service_version}}_linux_amd64.zip"
    dest: /usr/local/bin/
    mode: +x
    remote_src: yes
  become: true
  register: service_binary
  when: service_archive is changed
    or not service_binary_check.stat.exists

- block:
  - name: "service group present"
    group:
      name: "{{service_group}}"
    become: true

  - name: "service user present"
    user:
      name: "{{service_user}}"
      group: "{{service_group}}"
    become: true

  - name: "service data directory created"
    file:
      path: "{{service_data_dir}}"
      state: directory
      mode: 0750
      owner:  "{{service_user}}"
      group:  "{{service_group}}"
    become: true

  - name: "service conf directory created"
    file:
      path: "{{service_conf_dir}}"
      state: directory
      mode: 0755
    become: true

  - name: "systemd service config updated"
    template:
      src: "{{service_init_conf}}"
      dest: "/etc/systemd/system/{{service_name}}.service"
      mode: 0644
    become: true
    register: systemd_config

  - name: "systemd daemon reload"
    systemd: daemon_reload=yes
    become: true
    changed_when: true
    when: systemd_config is changed

  - name: "service config file updated"
    template:
      src: "{{service_name}}.hcl.j2"
      dest: "{{service_conf_dir}}/service.hcl"
      mode: 0644
    become: true
    register: service_config

  - name: "user belongs to docker groups"
    user:
      name: "{{service_user}}"
      groups: docker
      append: yes
    become: true
    register: docker_group
    when: service_mode == 'client'

  - name: "restart docker"
    systemd:
      name: docker
      state: restarted
    become: true
    when: docker_group is defined and docker_group is changed

  - name: "shell profile scripts are in place"
    copy:
      src: "{{item}}"
      dest: "{{ansible_env.HOME}}/profile.d/"
    with_fileglob: "{{role_path}}/files/profile.d/*"

  - name: "service enabled"
    systemd:
      name: "{{service_name}}"
      enabled: yes
    become: true

  - name: "service started"
    systemd:
      name: "{{service_name}}"
      state: started
    register: service_started
    become: true
  
  - name: "restart service"
    systemd:
      name: "{{service_name}}"
      state: restarted
    become: true
    register: service_restarted
    when: (systemd_config is changed
      or service_binary is changed
      or docker_group is changed
      or service_config is changed)
      and not service_started is changed

  # Pause to wait for service to start
  - pause:
      seconds: 4
    when: service_started is changed
      or service_restarted is changed

  - name: "service status check"
    uri:
      url: http://127.0.0.1:4646/v1/status/leader
      status_code: 200
    when: not bootstrap_enabled|default(false)
  
  when: service_mode|default(false)

